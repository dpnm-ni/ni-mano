---
kind: pipeline
type: docker
name: ni-mon-tests__nightly__python-3.5__prod

steps:
- name: config target
  image: python:3.5
  environment:
    MONITORING_HOST_PROD:
      from_secret: monitoring_host_prod
  commands:
  - cd tests/config
  - cp config.yaml.example config.yaml
  - sed -i "s/<ni_mon_server_addr>/$MONITORING_HOST_PROD/g" config.yaml
  - sed -i "s/<ni_ni_nfvo_addr>/$MONITORING_HOST_PROD/g" config.yaml

- name: run test
  image: python:3.5
  environment:
    SLACK_HOOK_URL:
      from_secret: slack_hook_url
  commands:
  - cd tests && pip install -r requirements.txt && cd ..
  - pytest tests/test_ni_mon.py
- name: notify slack if nightly test fail
  image: python:3.5
  commands:
  - curl -X POST -H 'Content-type:application/json' --data '{"channel":"#ci_status", "username":"ci_report",
      "text":"_${DRONE_REPO_NAME}__:Testbed nightly check __failed__"}'
      $SLACK_HOOK_URL
  when:
    status:
    - failure

trigger:
  branch:
  - master
  event:
  - cron

---
kind: pipeline
type: docker
name: ni-tests__dev

steps:
- name: config target
  image: python:3.5
  environment:
    COMPUTE_HOSTNAME_DEV:
      from_secret: compute_hostname_dev
    CONTROLLER_HOST_DEV:
      from_secret: controller_host_dev
    MONITORING_HOST_DEV:
      from_secret: monitoring_host_dev
    OPENSTACK_PASSWORD:
      from_secret: openstack_password
    MONITORING_HOST_PROD:
      from_secret: monitoring_host_prod
  commands:
  # config ni_mon
  - cd ni_mon/config
  - cp config.yaml.example config.yaml
  - sed -i "s/<kafka_server_address>/$MONITORING_HOST_DEV/g" config.yaml
  - sed -i "s/<controller_ip>/$CONTROLLER_HOST_DEV/g" config.yaml
  - sed -i "s/<influxdb_server_address>/$MONITORING_HOST_DEV/g" config.yaml
  - sed -i "s/<password>/$OPENSTACK_PASSWORD/g" config.yaml
  # does not need to subtitute the sw-id
  - sed -i "s/<node1_id>/$COMPUTE_HOSTNAME_DEV/g" config.yaml
  - cat config.yaml

  # config ni_nfvo
  - cd ../../ni_nfvo/config
  - cp config.yaml.example config.yaml
  - sed -i "s/<controller_server_address>/$CONTROLLER_HOST_DEV/g" config.yaml
  - sed -i "s/<password>/$OPENSTACK_PASSWORD/g" config.yaml
  - cat config.yaml

  # config tests
  - cd ../../tests/config
  - cp config.yaml.example config.yaml
  - sed -i "s/<ni_mon_server_addr>/localhost/g" config.yaml
  - sed -i "s/<ni_ni_nfvo_addr>/localhost/g" config.yaml
  - cat config.yaml

- name: run modules and tests
  image: python:3.5
  commands:
  - cd ni_mon && pip install -r requirements.txt && cd ..
  - cd ni_nfvo && pip install -r requirements.txt && cd ..
  - cd tests && pip install -r requirements.txt && cd ..
  # need sleep so that services has time to init
  - bash -c 'python -m ni_mon > ni_mon.log 2>&1' & sleep 5
  - bash -c 'python -m ni_nfvo > ni_nfvo.log 2>&1' & sleep 5
  - python -m pytest tests || (cat *.log & exit 1)

- name: notify slack test result
  image: python:3.5
  environment:
    SLACK_HOOK_URL:
      from_secret: slack_hook_url
  commands:
  - curl -X POST -H 'Content-type:application/json' --data '{"channel":"#ci_status", "username":"ci_report",
      "text":"_${DRONE_REPO_NAME}__:Build status is __${DRONE_BUILD_STATUS}__"}'
      $SLACK_HOOK_URL
  when:
    status:
    - success
    - failure
