# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ni_mon.models.base_model_ import Model
from ni_mon import util


class NetworkPort(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, port_id: str=None, port_name: str=None, network_id: str=None, ip_addresses: List[str]=None):  # noqa: E501
        """NetworkPort - a model defined in Swagger

        :param port_id: The port_id of this NetworkPort.  # noqa: E501
        :type port_id: str
        :param port_name: The port_name of this NetworkPort.  # noqa: E501
        :type port_name: str
        :param network_id: The network_id of this NetworkPort.  # noqa: E501
        :type network_id: str
        :param ip_addresses: The ip_addresses of this NetworkPort.  # noqa: E501
        :type ip_addresses: List[str]
        """
        self.swagger_types = {
            'port_id': str,
            'port_name': str,
            'network_id': str,
            'ip_addresses': List[str]
        }

        self.attribute_map = {
            'port_id': 'port_id',
            'port_name': 'port_name',
            'network_id': 'network_id',
            'ip_addresses': 'ip_addresses'
        }

        self._port_id = port_id
        self._port_name = port_name
        self._network_id = network_id
        self._ip_addresses = ip_addresses

    @classmethod
    def from_dict(cls, dikt) -> 'NetworkPort':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NetworkPort of this NetworkPort.  # noqa: E501
        :rtype: NetworkPort
        """
        return util.deserialize_model(dikt, cls)

    @property
    def port_id(self) -> str:
        """Gets the port_id of this NetworkPort.


        :return: The port_id of this NetworkPort.
        :rtype: str
        """
        return self._port_id

    @port_id.setter
    def port_id(self, port_id: str):
        """Sets the port_id of this NetworkPort.


        :param port_id: The port_id of this NetworkPort.
        :type port_id: str
        """

        self._port_id = port_id

    @property
    def port_name(self) -> str:
        """Gets the port_name of this NetworkPort.


        :return: The port_name of this NetworkPort.
        :rtype: str
        """
        return self._port_name

    @port_name.setter
    def port_name(self, port_name: str):
        """Sets the port_name of this NetworkPort.


        :param port_name: The port_name of this NetworkPort.
        :type port_name: str
        """

        self._port_name = port_name

    @property
    def network_id(self) -> str:
        """Gets the network_id of this NetworkPort.


        :return: The network_id of this NetworkPort.
        :rtype: str
        """
        return self._network_id

    @network_id.setter
    def network_id(self, network_id: str):
        """Sets the network_id of this NetworkPort.


        :param network_id: The network_id of this NetworkPort.
        :type network_id: str
        """

        self._network_id = network_id

    @property
    def ip_addresses(self) -> List[str]:
        """Gets the ip_addresses of this NetworkPort.


        :return: The ip_addresses of this NetworkPort.
        :rtype: List[str]
        """
        return self._ip_addresses

    @ip_addresses.setter
    def ip_addresses(self, ip_addresses: List[str]):
        """Sets the ip_addresses of this NetworkPort.


        :param ip_addresses: The ip_addresses of this NetworkPort.
        :type ip_addresses: List[str]
        """

        self._ip_addresses = ip_addresses
